#!/usr/bin/env bash

cd /tmp

if [ "$#" == "1" ] ; then 
	revision=$1
elif [ "$#" == "0" ] ; then
	revision=default
else
	echo 'Wrong number of arguments.  Need either a changeset/revision/branch/tag, or no argument.  (Will default to head of default branch.)'
	exit 1
fi
export revision

tmpsandboxdir=$(mktemp -d --tmpdir=/tmp ttc-dbman-sandbox-XXXXXX)
chown dt $tmpsandboxdir
chgrp dt $tmpsandboxdir

function check () {
	if [ "$?" != "0" ] ; then echo 'Problem.  Exiting.'; exit 1; fi 
}

sudo revision=$revision tmpsandboxdir=$tmpsandboxdir -i -u dt bash << _END_

function check () {
	if [ "\$?" != "0" ] ; then echo 'Problem.  Exiting.'; exit 1; fi 
}

echo 'Doing pull on mirror...'
cd ~/ttcskycam-bitbucket-mirror
check
hg pull
check
echo '... done.'

echo 'Updating mirror...'
hg up \$revision
check
echo '... done.'

VERSION=\$(./get-version.py)

mkdir \$tmpsandboxdir/ttc-dbman
check
echo 'Copying sandbox content to tmp dir...'
rsync -a --exclude .hg ~/ttcskycam-bitbucket-mirror/ \$tmpsandboxdir/ttc-dbman
check
echo '... done copying.'

cd \$tmpsandboxdir/ttc-dbman
check
./set-permissions.py 
check
./mc.py restart dev
check
echo 'Priming routeinfos...'
./prime_routeinfos.py
check
echo '... done.'
./prime_graphs.py
check
echo 'Mangling...'
./mangle_this_sandbox_make_it_dbman.py
check
echo '... done mangling.'
echo \$VERSION > VERSION
_END_
check

supervisorctl stop ttc-poll-locations
sudo tmpsandboxdir=$tmpsandboxdir -i -u dt bash << _END_

function check () {
	if [ "\$?" != "0" ] ; then echo 'Problem.  Exiting.'; exit 1; fi 
}

if [ -e ~/ttc-dbman ] ; then 
	rm -rf ~/ttc-dbman
	check
fi
check
cd \$tmpsandboxdir
check
mv ttc-dbman ~
check
cd /
rm -rf \$tmpsandboxdir
_END_
check
supervisorctl start ttc-poll-locations
check

